spring.application.name=ferrater-api

# Desactivar configuración automática de base de datos y seguridad
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# Usuario de prueba (por si activas Spring Security en el futuro)
spring.security.user.name=usuario
spring.security.user.password=clave

spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000

# Importante, para conectar a la BDD del servidor, tengo que abrir un tunel ssh en powershell asi: 
#  ssh -L 5432:localhost:5432 ferra_ssh@217.154.102.150
# Entonces ya puedo conectar a "localhost:5432" por que el tunel redirigira la conexion al servidor
# En produccion tengo que cambiar esto: spring.datasource.url=jdbc:postgresql://localhost:5432/ferrater_api?sslmode=require
# Por esto: spring.datasource.url=jdbc:postgresql://217.154.102.150:5432/ferrater_api?sslmode=require
# Tambien tengo que asegurarme de que mi postgresql local esta el servicio detenido (para conflicos con el puerto 5432)

# Configuración para PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/ferrater_api
#spring.datasource.url=jdbc:postgresql://localhost:5432/ferrater_api
spring.datasource.username=postgres
spring.datasource.password=ferter3006
spring.datasource.driver-class-name=org.postgresql.Driver

# Forzar a Hibernate a usar PostgreSQL (evita el error de Dialect)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
